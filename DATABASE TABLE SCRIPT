
-- Table: public.movie

-- DROP TABLE IF EXISTS public.movie;

CREATE TABLE IF NOT EXISTS public.movie
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title character varying(255) COLLATE pg_catalog."default",
    date date,
    rank double precision,
    revenue double precision,
    poster bytea,
    CONSTRAINT movie_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.movie
    OWNER to postgres;

-- Table: public.rating

-- DROP TABLE IF EXISTS public.rating;

CREATE TABLE IF NOT EXISTS public.rating
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    movie_fk bigint NOT NULL,
    user_fk bigint NOT NULL,
    rate double precision,
    comment character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT rating_pkey PRIMARY KEY (id),
    CONSTRAINT fkpau27hb558rmlyk32546a4meu FOREIGN KEY (user_fk)
        REFERENCES public.rating_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT rating_movie_fk_fkey FOREIGN KEY (movie_fk)
        REFERENCES public.movie (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT rating_user_fk_fkey FOREIGN KEY (user_fk)
        REFERENCES public.rating_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.rating
    OWNER to postgres;

-- Table: public.rating_user

-- DROP TABLE IF EXISTS public.rating_user;

CREATE TABLE IF NOT EXISTS public.rating_user
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT rating_user_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.rating_user
    OWNER to postgres;
